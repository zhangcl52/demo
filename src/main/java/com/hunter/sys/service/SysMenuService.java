package com.hunter.sys.service;import com.google.common.collect.Lists;import com.google.common.collect.Maps;import com.hunter.common.constant.BaseConstant;import com.hunter.sys.dao.SysMenuDao;import com.hunter.sys.entity.SysMenu;import com.hunter.sys.mapper.SysMenuMapper;import org.springframework.stereotype.Service;import javax.annotation.Resource;import java.util.ArrayList;import java.util.List;import java.util.Map;/** * @Author zhangcl * @Date 17/5/9  上午8:09 */@Servicepublic class SysMenuService {    @Resource    private SysMenuMapper sysMenuMapper;    @Resource    private SysMenuDao sysMenuDao;    /**     * 获取所有的一级菜单     *     * @return     */    public List<SysMenu> getAllTopMenu() {        return sysMenuMapper.getAllTopMenu();    }    /**     * 获取所有的菜单,其中子菜单在父类菜单中     *     * @return     */    public List<SysMenu> getAllMenu() {        List<SysMenu> resultList = Lists.newArrayList();        Map<String, List<SysMenu>> tempMap = Maps.newHashMap();        List<SysMenu> allSysMenu = sysMenuMapper.getAllMenu();        for (SysMenu sysMenu : allSysMenu) {            if (sysMenu.getParentId() == BaseConstant.INT_0) {                resultList.add(sysMenu);            } else {                List<SysMenu> childSysMenu = tempMap.get(sysMenu.getParentId() + "");                if (childSysMenu == null) {                    childSysMenu = Lists.newArrayList();                    childSysMenu.add(sysMenu);                    tempMap.put(sysMenu.getParentId() + "", childSysMenu);                } else {                    childSysMenu.add(sysMenu);                }            }        }        for (SysMenu sysMenu : resultList) {            sysMenu.setChildMenu(tempMap.get(sysMenu.getId() + "") == null ? new ArrayList<SysMenu>() : tempMap.get(sysMenu.getId() + ""));        }        return resultList;    }    /**     * 根据id获取数据     *     * @param id     * @return     */    public SysMenu findById(long id) {        return sysMenuMapper.findById(id);    }    /**     * 增加     *     * @param sysMenu     */    public void save(SysMenu sysMenu) {        sysMenuDao.insertOne(sysMenu);    }    /**     * 修改     *     * @param sysMenu     */    public void update(SysMenu sysMenu) {        sysMenuDao.updateByEntity(sysMenu);    }    /**     * 查找子菜单     *     * @param id     * @return     */    public List<SysMenu> getChildMenu(long id) {        //如果没有子菜单时返回一个list<SysMenu>.size=0        List<SysMenu> sysMenuList = sysMenuMapper.getChildMenu(id);        return sysMenuList;    }}