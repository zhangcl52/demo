package com.hunter.sys.controller;import com.google.common.base.Strings;import com.hunter.common.constant.BaseConstant;import com.hunter.common.constant.SexEnum;import com.hunter.common.constant.SysConstant;import com.hunter.common.util.EncryptUtil;import com.hunter.sys.entity.SysUser;import com.hunter.sys.service.SysRandomNumberService;import com.hunter.sys.service.SysUserService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.ModelMap;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import javax.servlet.http.HttpServletRequest;import java.util.Date;import java.util.List;/** * @Author zhangcl * @Date 16/7/9  下午6:07 */@Controller@RequestMapping("/sys/user")public class SysUserController {    @Autowired    private SysUserService sysUserService;    @Autowired    private SysRandomNumberService sysRandomNumberService;    /**     * 跳转到增加页面     *     * @param request     * @param modelMap     * @return     */    @RequestMapping(value = "/add", method = RequestMethod.GET)    public String add(HttpServletRequest request, ModelMap modelMap) {        return "sys/user/addUser";    }    /**     * 保存用户     *     * @param request     * @param modelMap     * @return     */    @RequestMapping(value = "/save", method = RequestMethod.POST)    public String save(HttpServletRequest request, ModelMap modelMap) {        Date now = new Date();        String userName = request.getParameter("userName");        String userPhone = request.getParameter("userPhone");        String password = request.getParameter("password");        String email = request.getParameter("email");        String sex = request.getParameter("sex");        SysUser sysUser = new SysUser();        sysUser.setName(userName);        sysUser.setPassword(EncryptUtil.encodeByMD5(password));        sysUser.setSex(sex);        if (!Strings.isNullOrEmpty(email)) {            sysUser.setEmail(email);        }        sysUser.setPhone(userPhone);        sysUser.setCreateTime(now);        sysUser.setModifyTime(now);        sysUser.setCreateName(SysConstant.ZCL);        sysUser.setModifyName(SysConstant.ZCL);        sysUser.setCode(sysRandomNumberService.getRandomNumber() + "");        sysUserService.save(sysUser);        return "redirect:list.do";    }    /**     * 用户列表     *     * @param request     * @param modelMap     * @return     */    @RequestMapping(value = "/list", method = RequestMethod.GET)    public String list(HttpServletRequest request, ModelMap modelMap) {        String userName =request.getParameter("userName");        String code=request.getParameter("code");        String phone=request.getParameter("phone");        List<SysUser> lists = sysUserService.findAllUsers();        modelMap.put("userList", lists);        modelMap.put("sexEnum", SexEnum.values());        return "sys/user/listUser";    }    /**     * 删除用户     *     * @param request     * @param modelMap     * @return     */    @RequestMapping(value = "/delete", method = RequestMethod.GET)    public String delete(HttpServletRequest request, ModelMap modelMap) {        String id = request.getParameter("id");        if (!Strings.isNullOrEmpty(id)) {            SysUser user = sysUserService.findUserById(Long.valueOf(id));            if (null != user) {                user.setIsDel(BaseConstant.INT_1);                user.setModifyName(SysConstant.ZCL);                user.setModifyTime(new Date());                sysUserService.updateByEntity(user);            }        }        return "redirect:list.do";    }}