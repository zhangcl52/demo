package com.hunter.sys.base.service;import com.hunter.sys.base.dao.SysUserDao;import com.hunter.sys.base.entity.SysUser;import com.hunter.sys.base.mapper.SysUserMapper;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.List;import java.util.Map;/** * @Author zhangcl * @Date 16/7/9  下午6:06 */@Servicepublic class SysUserService {    @Autowired    private SysUserDao sysUserDao;    @Autowired    private SysUserMapper sysUserMapper;    private static Logger LOGGER = LoggerFactory.getLogger(SysUserService.class);    /**     * 保存用户     *     * @param sysUser     */    public void save(SysUser sysUser) {        sysUserDao.insertOne(sysUser);    }    /**     * 查找所有用户     *     * @return     */    public List<SysUser> findAllUsers() {        List<SysUser> list = sysUserDao.findAll();        return list;    }    /**     * 根据id查找用户     *     * @param id     * @return     */    public SysUser findUserById(long id) {        SysUser sysUser = sysUserDao.findOneById(id);        return sysUser;    }    /**     * 更新     *     * @param user     */    public void updateByEntity(SysUser user) {        sysUserDao.updateByEntity(user);    }    /**     * 根据map查找用户     *     * @param map     * @return     */    public List<SysUser> findListByMap(Map<String, Object> map) {        return sysUserDao.findListByMap(map);    }    /**     * 根据code和密码查找用户     *     * @param code     * @return     */    public SysUser findUserByCode(String code,String encryptPwd) throws Exception {        List<SysUser> userList = sysUserMapper.getUserByCode(code,encryptPwd);        if (userList != null && userList.size() > 1) {            LOGGER.error("根据code[" + code + "]和密码找到" + userList.size() + "个用户");            throw new RuntimeException("根据code[" + code + "]和密码找到" + userList.size() + "个用户");        }        if (userList != null && userList.size() == 1) {            return userList.get(0);        }        return null;    }}