package com.hunter.sys.base.controller;import com.github.pagehelper.PageHelper;import com.github.pagehelper.PageInfo;import com.google.common.base.Strings;import com.hunter.base.vo.RequestData;import com.hunter.base.vo.ResponseData;import com.hunter.common.constant.BaseConstant;import com.hunter.common.constant.SysConstant;import com.hunter.common.util.EncryptUtil;import com.hunter.sys.base.entity.SysUser;import com.hunter.sys.base.service.SysRandomNumberService;import com.hunter.sys.base.service.SysUserService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.ModelMap;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.ResponseBody;import javax.servlet.http.HttpServletRequest;import java.util.Date;/** * @Author zhangcl * @Date 16/7/9  下午6:07 */@Controller@RequestMapping("/sys/user")public class SysUserController {    @Autowired    private SysUserService sysUserService;    @Autowired    private SysRandomNumberService sysRandomNumberService;    /**     * 跳转到增加页面     *     * @param request     * @param modelMap     * @return     */    @RequestMapping(value = "/add", method = RequestMethod.GET)    public String add(HttpServletRequest request, ModelMap modelMap) {        String id = request.getParameter("id");        SysUser user = new SysUser();        if (!Strings.isNullOrEmpty(id)) {            user = sysUserService.findUserById(Long.valueOf(id));        }        modelMap.put("user", user);        return "sys/user/addUser";    }    /**     * 保存用户     *     * @param request     * @param modelMap     * @return     */    @RequestMapping(value = "/save", method = RequestMethod.POST)    public String save(HttpServletRequest request, SysUser sysUser, ModelMap modelMap) {        String hasModifyPwd = request.getParameter("hasModifyPwd");        long id = sysUser.getId();        Date now = new Date();        sysUser.setModifyTime(now);        sysUser.setModifyName(SysConstant.ZCL);        //新增        if (id == 0) {            sysUser.setCreateTime(now);            sysUser.setCreateName(SysConstant.ZCL);            sysUser.setCode(sysRandomNumberService.getRandomNumber() + "");            sysUser.setPassword(EncryptUtil.encodeByMD5(EncryptUtil.encodeByMD5(EncryptUtil.encodeByMD5(sysUser.getPassword()) + sysUser.getCode())));            sysUserService.save(sysUser);        } else {            if (hasModifyPwd.equals(SysConstant.YES_SIMPLE)) {                sysUser.setPassword(EncryptUtil.encodeByMD5(EncryptUtil.encodeByMD5(EncryptUtil.encodeByMD5(sysUser.getPassword()) + sysUser.getCode())));            }            sysUserService.updateByEntity(sysUser);        }        return "redirect:list.do";    }    /**     * ajax请求,现在只处理分页     *     * @param request     * @return     */    @RequestMapping(value = "/ajax/list", produces = "application/json;charset=UTF-8")    @ResponseBody    public String ajaxList(RequestData requestData, HttpServletRequest request) {        //分页        PageHelper.startPage(requestData.getPageNum(), requestData.getLength());        //查出数据        PageInfo pageInfo = new PageInfo(sysUserService.findListByMap(requestData.getData()));        ResponseData responseData = new ResponseData(pageInfo);        //返回json        String json = responseData.getResultJson(requestData);        return json;    }    /**     * 用户列表     *     * @param request     * @param modelMap     * @return     */    @RequestMapping(value = "/list")    public String list(HttpServletRequest request, ModelMap modelMap) {        modelMap.put("name", request.getParameter("name"));        modelMap.put("code", request.getParameter("code"));        modelMap.put("email", request.getParameter("email"));        modelMap.put("phone", request.getParameter("phone"));        return "sys/user/listUser";    }    /**     * 删除用户     *     * @param request     * @param modelMap     * @return     */    @RequestMapping(value = "/delete", method = RequestMethod.GET)    public String delete(HttpServletRequest request, ModelMap modelMap) {        String id = request.getParameter("id");        if (!Strings.isNullOrEmpty(id)) {            SysUser user = sysUserService.findUserById(Long.valueOf(id));            if (null != user) {                user.setIsDel(BaseConstant.INT_1);                user.setModifyName(SysConstant.ZCL);                user.setModifyTime(new Date());                sysUserService.updateByEntity(user);            }        }        return "redirect:list.do";    }}