package com.hunter.base.entity;import com.hunter.common.DateUtil;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import java.io.Serializable;import java.lang.reflect.Field;import java.util.Date;/** * Created by zhangchaolong on 16/6/18. */public abstract class BaseEntity implements Serializable {    private static final Logger LOGGER = LoggerFactory.getLogger(BaseEntity.class);    private static final long serialVersionUID = -8362968370027823667L;    protected long id;    protected String createName;//创建人姓名    protected Date createTime;//创建时间    protected String modifyName;//修改人姓名    protected Date modifyTime;//修改时间    protected int isDel;//是否删除 0:未删除 1:已删除    public long getId() {        return id;    }    public void setId(long id) {        this.id = id;    }    public String getCreateName() {        return createName;    }    public void setCreateName(String createName) {        this.createName = createName;    }    public Date getCreateTime() {        return createTime;    }    public void setCreateTime(Date createTime) {        this.createTime = createTime;    }    public String getModifyName() {        return modifyName;    }    public void setModifyName(String modifyName) {        this.modifyName = modifyName;    }    public Date getModifyTime() {        return modifyTime;    }    public void setModifyTime(Date modifyTime) {        this.modifyTime = modifyTime;    }    public int getIsDel() {        return isDel;    }    public void setIsDel(int isDel) {        this.isDel = isDel;    }    /**     * 获取指定的属性值     *     * @param object     * @param properties     * @return     */    public String getProperties(Object object, String[] properties) {        Field[] fields = this.getClass().getDeclaredFields();        Field[] superFields = this.getClass().getSuperclass().getDeclaredFields();        Field[] allFields = new Field[fields.length + superFields.length];        System.arraycopy(fields, 0, allFields, 0, fields.length);        System.arraycopy(superFields, 0, allFields, fields.length, superFields.length);        StringBuilder sb = new StringBuilder("[");        if (properties == null || properties.length == 0) {            for (Field field : allFields) {                try {                    String value;                    field.setAccessible(true);                    if (field.getType().getName().endsWith("Date")) {                        Date date = (Date) field.get(object);                        value = DateUtil.DateToStr(date, DateUtil.TIME_FORMAT) + "";                    } else {                        value = field.get(object) + "";                    }                    value = value.equals("null") ? "" : value;                    sb.append("\"").append(value).append("\"").append(",");                } catch (Exception e) {                    LOGGER.error("获取属性值出错", e);                }            }        } else {            for (String pro : properties) {                for (Field field : allFields) {                    if (pro.equals(field.getName())) {                        try {                            String value;                            field.setAccessible(true);                            if (field.getType().getName().endsWith("Date")) {                                Date date = (Date) field.get(object);                                value = DateUtil.DateToStr(date, DateUtil.TIME_FORMAT) + "";                            } else {                                value = field.get(object) + "";                            }                            value = value.equals("null") ? "" : value;                            sb.append("\"").append(value).append("\"").append(",");                        } catch (Exception e) {                            LOGGER.error("获取属性值出错", e);                        }                    }                }            }        }        sb.replace(sb.length() - 1, sb.length(), "]");        return sb.toString();    }    public String toString() {        return "id=" + id +                ", createName='" + createName + '\'' +                ", createTime=" + createTime +                ", modifyName='" + modifyName + '\'' +                ", modifyTime=" + modifyTime +                ", isDel=" + isDel +                '}';    }}