<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/cache
                           http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!-- 缓存服务 Start -->
    <!-- 缓存管理 -->
    <cache:annotation-driven cache-manager="compositeCacheManager"/>
    <!-- 组合缓存管理器,实现本地内存和redis的两级缓存 -->
    <bean id="compositeCacheManager" class="org.springframework.cache.support.CompositeCacheManager">
        <property name="cacheManagers">
            <list>
                <!-- 本地内存缓存管理器 -->
                <ref bean="concurrentMapCacheManager" />
                <!-- redis缓存管理器 -->
                <!--<ref bean="redisCacheManager" />-->
            </list>
        </property>
    </bean>
    <!-- 本地内存缓存 -->
    <bean id="concurrentMapCacheManager" class="org.springframework.cache.concurrent.ConcurrentMapCacheManager">
        <property name="cacheNames">
            <list>
                <value>localMemCache</value>
            </list>
        </property>
    </bean>
    <!-- redis缓存 -->
    <!--<bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">-->
        <!--<constructor-arg name="redisOperations" ref="redisTemplate"/>-->
        <!--<property name="cacheNames">-->
            <!--<list>-->
                <!--<value>redisCache</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
    <!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
        <!--<property name="maxTotal" value="${redis.pool.maxTotal}"/>-->
        <!--<property name="minIdle" value="${redis.pool.minIdle}"/>-->
        <!--<property name="maxIdle" value="${redis.pool.maxIdle}"/>-->
        <!--<property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>-->
        <!--<property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>-->
    <!--</bean>-->
    <!--<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
        <!--<property name="usePool" value="true"></property>-->
        <!--<property name="hostName" value="${redis.host}" />-->
        <!--<property name="port" value="${redis.port}" />-->
        <!--<property name="password" value="${redis.password}" />-->
        <!--<property name="timeout" value="${redis.timeout}" />-->
        <!--<property name="database" value="${redis.default.dbIndex}"></property>-->
        <!--<constructor-arg index="0" ref="jedisPoolConfig" />-->
    <!--</bean>-->
    <!--<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">-->
        <!--<property name="connectionFactory" ref="jedisConnectionFactory" />-->
        <!--<property name="keySerializer">-->
            <!--<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>-->
        <!--</property>-->
        <!--<property name="valueSerializer">-->
            <!--<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>-->
        <!--</property>-->
    <!--</bean>-->
    <!-- 缓存服务 End -->
</beans>